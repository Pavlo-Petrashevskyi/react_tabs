{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","find","tab","id","className","map","classNames","href","onClick","title","content","App","useState","setSelectedTabId","selectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAA4B,SAAC,GAInC,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAOA,OALKF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,OAE/BA,EAAgBD,EAAK,GAAGK,IAIxB,mCACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAH,GAAG,OACX,oBACEE,UAAWE,IACT,CAAE,YAAaJ,EAAIC,KAAOJ,IAE5B,UAAQ,MAJV,SAOE,mBACEQ,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,WACP,OAAOT,IAAkBG,EAAIC,GAAKH,EAAcE,GAAO,MAJ3D,SAOGA,EAAIO,SATFP,EAAIC,WAgBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,mBACGN,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,YAD/B,aACG,EAA4CW,gBCxC1CZ,EAAO,CAClB,CAAEK,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAASd,EAAK,GAAGK,IAA3D,mBAAOJ,EAAP,KAAsBc,EAAtB,KAMA,OACE,sBAAKT,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,6CACsBN,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,YADlD,aACsB,EAA4CU,SAGlE,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAeA,EACfC,cAbgB,SAACc,GACrB,OAAOD,EAAiBC,EAAYX,WCdxCY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f193f234.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype TabsProps = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (selectedTab: Tab) => void,\n};\n\nexport const Tabs: React.FC<TabsProps> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  if (!tabs.find(tab => tab.id === selectedTabId)) {\n    // eslint-disable-next-line no-param-reassign\n    selectedTabId = tabs[0].id;\n  }\n\n  return (\n    <>\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              <li\n                className={classNames(\n                  { 'is-active': tab.id === selectedTabId },\n                )}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    return selectedTabId !== tab.id ? onTabSelected(tab) : null;\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {tabs.find(tab => tab.id === selectedTabId)?.content}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (selectedTab: Tab) => {\n    return setSelectedTabId(selectedTab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tabs.find(tab => tab.id === selectedTabId)?.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}